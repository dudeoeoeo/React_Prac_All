{"ast":null,"code":"var _jsxFileName = \"/Users/bancow-khy/React_Practice/React_start/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useReducer, useRef, useState } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createBulkTodos() {\n  const array = [];\n\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일 ${i}`,\n      checked: false\n    });\n  }\n\n  return array;\n}\n\nfunction todoReducer(todos, action) {\n  switch (action.type) {\n    case 'INSERT':\n      return todos.concat(action.todo);\n\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== action.id);\n\n    case 'TOGGLE':\n      return todos.map(todo => todo.id === action.id ? { ...todo,\n        checked: !todo.checked\n      } : todo);\n\n    default:\n      return todos;\n  }\n}\n\nconst App = () => {\n  _s();\n\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos); //const [todos, setTodos] = useState(createBulkTodos);\n  // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n\n  const nextId = useRef(2501);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    }; //setTodos(todo => todos.concat(todo));\n\n    dispatch({\n      type: 'INSERT',\n      todo\n    });\n    nextId.current += 1;\n  }, []);\n  const onRemove = useCallback(id => {\n    //setTodos(todos => todos.filter(todo => todo.id !== id));\n    dispatch({\n      type: 'REMOVE',\n      id\n    });\n  }, []);\n  const onToggle = useCallback(id => {\n    //setTodos(todos => todos.map(todo => todo.id === id ? {...todo, checked: !todo.checked } : todo, ),);\n    dispatch({\n      type: 'TOGGLE',\n      id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n    children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n      onInsert: onInsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"gxNQdhJu+UMVed+0nxOSqDrY9+o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bancow-khy/React_Practice/React_start/todo-app/src/App.js"],"names":["React","useCallback","useReducer","useRef","useState","TodoInsert","TodoList","TodoTemplate","createBulkTodos","array","i","push","id","text","checked","todoReducer","todos","action","type","concat","todo","filter","map","App","dispatch","undefined","nextId","onInsert","current","onRemove","onToggle"],"mappings":"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","sourcesContent":["import React, { useCallback, useReducer, useRef, useState } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nfunction createBulkTodos() {\n  const array = [];\n  for (let i = 1; i <= 2500; i++) {\n    array.push({id: i, text: `할 일 ${i}`, checked: false});\n  }\n  return array;\n}\n\nfunction todoReducer(todos, action) {\n  switch (action.type) {\n    case 'INSERT':\n      return todos.concat(action.todo);\n    case 'REMOVE':\n      return todos.filter(todo => todo.id !== action.id);\n    case 'TOGGLE':\n      return todos.map(todo => todo.id === action.id ? {...todo, checked: !todo.checked} : todo,);\n    default:\n      return todos;\n  }\n}\n\nconst App = () => {\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n  //const [todos, setTodos] = useState(createBulkTodos);\n  // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(2501);\n\n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      //setTodos(todo => todos.concat(todo));\n      dispatch({type: 'INSERT', todo});\n      nextId.current += 1;\n    }, []);\n\n  const onRemove = useCallback(\n    (id) => {\n      //setTodos(todos => todos.filter(todo => todo.id !== id));\n      dispatch({type: 'REMOVE', id});\n    }, []);\n\n  const onToggle = useCallback(\n    (id) => {\n      //setTodos(todos => todos.map(todo => todo.id === id ? {...todo, checked: !todo.checked } : todo, ),);\n      dispatch({type: 'TOGGLE', id});\n    },[]);\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}